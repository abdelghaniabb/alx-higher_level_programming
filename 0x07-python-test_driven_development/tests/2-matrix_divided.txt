>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> 
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> 
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> matrix
[[1, 2, 3], [4, 5, 6]]
>>>
>>> matrix_divided()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> matrix_divided(matrix)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided(matrix,)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> matrix_divided(matrix,0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/abdelghani/Desktop/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 26, in matrix_divided
    raise ZeroDivisionError("division by zero")
ZeroDivisionError: division by zero
>>> 
>>> matrix_divided([[2, 1.6],[1, 7]],2.5)
[[0.8, 0.64], [0.4, 2.8]]
>>> matrix_divided([[2, 1.6],["1", 7]],2.5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/abdelghani/Desktop/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 22, in matrix_divided
    raise TypeError(error)
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> 
>>> matrix_divided([[2, 1.6],[1, 7]],2)
[[1.0, 0.8], [0.5, 3.5]]
>>> matrix_divided([[2, 1],[1, 7]], 2.3)
[[0.87, 0.43], [0.43, 3.04]]
>>> matrix_divided([[2, 1],[1, 7]], 2222222.3)
[[0.0, 0.0], [0.0, 0.0]]
>>> 
>>> matrix = [[2, 5, 4], [1, 2]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/me/Desktop/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> 
>>> matrix_divided([[2, 5, 4], [1, 2]], 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/me/Desktop/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 17, in matrix_divided
    raise TypeError("Each row of the matrix must have the same size")
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[2, 5, 4], [1, 2, 2]], "3")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/me/Desktop/ALX/alx-higher_level_programming/0x07-python-test_driven_development/2-matrix_divided.py", line 24, in matrix_divided
    raise TypeError("div must be a number")
TypeError: div must be a number
>>> 
>>> matrix_divided([[2, 5, 4], [1, 2, 2]], 5255.5)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>>
>>> matrix_divided([[0, 0, 0], [0, 0, 0]], 5255.5)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> 
